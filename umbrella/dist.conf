# configuration for replica exchange scripts
 
# run simulation: 
#   mkdir output
#   (cd output; mkdir 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15)
#   mpirun -np 16 -hostfile hostfile $bindir/namd2 +replicas 16 job0.conf +stdout output/%d/job0.%d.log
# the number of MPI ranks (-np) must be a multiple of the number of replicas (+replicas)
 
# to continue:
#   mpirun -np 16 -hostfile hostfile $bindir/namd2 +replicas 16 job1.conf +stdout output/%d/job1.%d.log
# increase num_runs below if job completed, or use latest restartXXX.tcl file available
# be sure to increment jobX for +stdout option on command line
 
# view in VMD:  source job0.conf; source ../show_replicas.vmd
# add continued:   source job1.conf; source ../show_replicas.vmd
# show both:  vmd -e load_all.vmd
 
# sort into single-temperature trajectories:
#   $bindir/sortreplicas output/%s/stretch_alanin.job0 16 10
#   $bindir/sortreplicas output/%s/stretch_alanin.job1 16 10
 
set num_replicas 15
set temperature 283.15
set steps_per_run 100
set num_runs 5000
# num_runs should be divisible by runs_per_frame * frames_per_restart
set runs_per_frame 1000
set frames_per_restart 1000
set namd_config_file "./step4_equilibration.inp"
set output_root "output/%s/dist" ; # directories must exist
set input_root "../input/initial.%d" ; # initial configurations
 
proc replica_bias { i } {
  global num_replicas
  set ix [expr $i % $num_replicas]
  return [list dist "centers [expr 3.5 + $ix * 0.5]"]
}
 
proc replica_neighbors { i } {
  global num_replicas
  if { $i % 2 } { set s -1 } { set s 1 }
  set result {}
  foreach { d } { $s -$s } {
    set j [expr $i + $d]
    if { $j < 0 || $j >= $num_replicas } {
      lappend result $i ; # swap with self
    } {
      lappend result $j
    }
  }
  return $result
}
 
# the following used only by show_replicas.vmd
set psf_file "../../../solvated/step3_pbcsetup.xplor.ext.psf"
set initial_pdb_file "../../../solvated/step3_pbcsetup.pdb"
set fit_pdb_file "../../../solvated/step3_pbcsetup.pdb"
